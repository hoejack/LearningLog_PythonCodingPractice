29 August 2022
# Refresher for Random
import random
random.randint(0, 100) 

The provided code stub reads and integer, n, from STDIN. For all non-negative integers i < n, print i ** 2.
Example
The list of non-negative integers that are less than n = 3  is [0, 1, 2]. Print the square of each number on a separate line.
Outcome: 
0
1
4

Solution:

c = 0 
    
    while c != n: 
        print(c**2)
        c = c + 1

30th August 2022

Q: 
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.

total = sum(list(n for n in range(0,1000) if n % 3 == 0 or n % 5 == 0))
print(total)
233168


Q: 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Fibonacci sequence 

prev, curr = 0, 1
total = 0 

while True:
    prev, curr = curr, prev + curr
    if curr > 4000000:
        break
    if curr % 2 == 0:
        total += curr
        
print(total)
